---
/* http://localhost:2121/playground/kitchen-sink/ */

import LayoutSidebar from '~/app/LayoutSidebar.astro'
import CrudProducts from '~/modules/CrudProducts.astro'
import FormSignIn from '~/modules/FormSignIn.astro'
import FormSignUp from '~/modules/FormSignUp.astro'
import FormForgotPassword from '~/modules/FormForgotPassword.astro'
import FormResetPassword from '~/modules/FormResetPassword.astro'
import FormProfileLock from '~/modules/FormProfileLock.astro'
// import CrudUsers from '~/modules/CrudUsers.astro';
import ErrorMaintenance from '~/modules/ErrorMaintenance.astro'
import ErrorNotFound from '~/modules/ErrorNotFound.astro'
import ErrorServer from '~/modules/ErrorServer.astro'
import PricingPlan from '~/modules/PricingPlan.astro'

import { actions } from './_actions'
---

<LayoutSidebar class='mb-20 bg-slate-800 px-8 py-16 text-slate-100'>
  <h1 class='ml-8 text-3xl font-bold lg:text-4xl xl:text-7xl'>
    ðŸ•¹&nbsp;Playground
  </h1>

  <dummy-spacer class='mb-36 block'></dummy-spacer>

  <nav
    class:list={[
      'z-50 flex justify-center align-middle',
      'sticky top-2 w-full border-slate-800 bg-gray-800/30 p-4',
      'border-x-red-200 bg-gradient-to-r text-white backdrop-blur-md',
      'from-slate-700/30 via-slate-700 to-slate-700/30',
      'hover:from-slate-500/30 hover:to-slate-500/30',
      'focus:outline-none focus:ring-4 focus:ring-blue-300',
      'shadow-lg shadow-slate-800/50 dark:focus:ring-blue-800',
      'rounded-lg font-medium dark:shadow-lg dark:shadow-blue-800/80',
      'mb-2 mr-2 px-5 py-2.5 text-center text-sm'
    ]}
  >
    {
      actions.map((button) => (
        <button
          type='button'
          data-action={button.action}
          class:list={[
            'mx-8',
            button.action === 'hardReloadPage' && 'bg-gray-800',

            'bg-blue-700 text-white hover:bg-blue-800',
            'focus:outline-none focus:ring-4 focus:ring-blue-300',
            'rounded-full px-5 py-2.5 text-sm font-medium',
            'my-2 mr-2 text-center dark:bg-blue-600',
            'dark:hover:bg-blue-700 dark:focus:ring-blue-800'
          ]}
        >
          {button.text}
        </button>
      ))
    }
  </nav>

  <section>
    <h2 class='m-8 mt-24 text-5xl font-bold'>CRUD â€” Products</h2>
    <CrudProducts class='p-4 lg:p-16' />
  </section>

  <!-- <section>
		<h2 class="text-5xl font-bold m-8 mt-24">CRUD â€” Users</h2>
		<CrudUsers class="p-4 lg:p-16" />
	</section> -->

  <section>
    <h2 class='m-8 mt-24 text-5xl font-bold'>Forms â€” User</h2>

    <div class='flex flex-wrap justify-between'>
      <FormSignIn class='p-4 lg:p-16' />
      <FormResetPassword class='p-4 lg:p-16' />
      <FormProfileLock class='p-4 lg:p-16' />
    </div>
    <div class='mt-12 flex flex-wrap justify-between'>
      <FormSignUp class='p-4 lg:p-16' />
      <FormForgotPassword class='p-4 lg:p-16' />
    </div>
  </section>

  <section>
    <h2 class='m-8 mt-24 text-5xl font-bold'>Pricing plan</h2>

    <div class='mb-8 bg-slate-50 lg:p-16'>
      <PricingPlan class='p-4 lg:p-16' />
    </div>
  </section>

  <section>
    <h2 class='m-8 mt-24 text-5xl font-bold'>Pages â€” Errors</h2>
    <div class='flex flex-wrap justify-around gap-8'>
      <div class='mb-8 bg-slate-50 lg:p-16'>
        <ErrorMaintenance class='p-4' />
      </div>
      <div class='mb-8 bg-slate-50 lg:p-16'>
        <ErrorNotFound class='p-4' />
      </div>
      <div class='mb-8 bg-slate-50 lg:p-16'>
        <ErrorServer class='p-4' />
      </div>
    </div>
  </section>
</LayoutSidebar>

<script>
  import type { CrudEntities } from '~/modules/CrudEntities.client.ts'
  import type { PlaygroundAction } from '~/types/entities.ts'

  const playgroundActions: Record<PlaygroundAction, (...args: any) => void> = {
    refetchCrudData: (crud: CrudEntities) => crud.update(),
    hardReloadPage: () => location.reload()
  }

  document.querySelectorAll('[data-action]').forEach((b) =>
    b.addEventListener('click', (e) =>
      document.querySelectorAll('entities-crud').forEach((crud) => {
        const name = (e.target as HTMLElement).dataset
          .action as PlaygroundAction

        console.log('Action!', name, e.target)

        playgroundActions[name](crud)
      })
    )
  )
</script>
